<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AUTOR_INFORMADO_NAO_EXISTE" xml:space="preserve">
    <value>O autor informado não está cadastrado no sistema.</value>
  </data>
  <data name="AUTOR_JA_CADASTRADO" xml:space="preserve">
    <value>O autor já está cadastrado.</value>
  </data>
  <data name="BUSCA_AUTOR_VAZIO" xml:space="preserve">
    <value>O campo de nome do autor não pode ser vazio.</value>
  </data>
  <data name="CAMPO_BUSCA_VAZIO" xml:space="preserve">
    <value>Os campos de busca não podem ser vazios.</value>
  </data>
  <data name="CPF_INCORRETO" xml:space="preserve">
    <value>Informe um CPF válido.</value>
  </data>
  <data name="CPF_JA_REGISTRADO" xml:space="preserve">
    <value>Já existe um usuário cadastrado com o CPF informado.</value>
  </data>
  <data name="CPF_JA_REGISTRADO_CURADOR" xml:space="preserve">
    <value>Já existe um curador registrado com o CPF informador.</value>
  </data>
  <data name="CPF_USUARIO_NAO_EXISTE" xml:space="preserve">
    <value>Não há usuário cadastrado com o CPF informado.</value>
  </data>
  <data name="DESCRICAO_AUTOR_VAZIA" xml:space="preserve">
    <value>Insira a descrição do autor.</value>
  </data>
  <data name="DESCRICAO_LIVRO_VAZIA" xml:space="preserve">
    <value>A descrição do livro não pode ser vazia.</value>
  </data>
  <data name="EMAIL_INCORRETO" xml:space="preserve">
    <value>Utilize um endereço email válido.</value>
  </data>
  <data name="EMAIL_JA_REGISTRADO" xml:space="preserve">
    <value>Já existe um usuário registrado com o email informado.</value>
  </data>
  <data name="EMAIL_JA_REGISTRADO_CURADOR" xml:space="preserve">
    <value>Já existe um curador registrado com o email informado.</value>
  </data>
  <data name="EMAIL_OU_SENHA_INCORRETOS" xml:space="preserve">
    <value>Email e/ou senha incorreto(s).</value>
  </data>
  <data name="EMAIL_VAZIO" xml:space="preserve">
    <value>O email não pode ser vazio.</value>
  </data>
  <data name="ERRO_DESCONHECIDO" xml:space="preserve">
    <value>Ocorreu um erro desconhecido.</value>
  </data>
  <data name="ERRO_EMPRESTIMO" xml:space="preserve">
    <value>Não foi possível cadastrar o empréstimo.</value>
  </data>
  <data name="ESTOQUE_INCORRETO" xml:space="preserve">
    <value>A quantidade de livros deve ser maior que 0.</value>
  </data>
  <data name="ISBN_JA_CADASTRADO" xml:space="preserve">
    <value>Já existe um livro cadastrado com o mesmo ISBN.</value>
  </data>
  <data name="ISBN_LIVRO_NAO_EXISTE" xml:space="preserve">
    <value>Não há livro cadastrado com o ISBN informado.</value>
  </data>
  <data name="ISBN_VAZIO" xml:space="preserve">
    <value>O ISBN nao pode ser vazio.</value>
  </data>
  <data name="LIVRO_JA_CADASTRADO" xml:space="preserve">
    <value>Um livro de mesmo nome já está cadastrado.</value>
  </data>
  <data name="LIVRO_NAO_INFORMADO" xml:space="preserve">
    <value>Informe o ISBN do livro (COM HÍFENS) para cadastrar o empréstimo.</value>
  </data>
  <data name="LIVRO_SEM_ESTOQUE" xml:space="preserve">
    <value>No momento, não há cópia disponível do livro solicitado.</value>
  </data>
  <data name="NOME_AUTOR_VAZIO" xml:space="preserve">
    <value>Insira o nome do autor.</value>
  </data>
  <data name="NOME_VAZIO" xml:space="preserve">
    <value>O nome não pode ser vazio.</value>
  </data>
  <data name="SEM_TOKEN" xml:space="preserve">
    <value>Houve erro na autenticação.</value>
  </data>
  <data name="SENHA_VAZIA" xml:space="preserve">
    <value>A senha deve conter 6 ou mais caracteres.</value>
  </data>
  <data name="SESSAO_EXPIRADA" xml:space="preserve">
    <value>Sua sessão foi expirada. </value>
  </data>
  <data name="TITULO_LIVRO_VAZIO" xml:space="preserve">
    <value>O título do livro não pode ser vazio.</value>
  </data>
  <data name="TOKEN_EXPIRADO" xml:space="preserve">
    <value>Seu token de acesso expirou.</value>
  </data>
  <data name="USUARIO_NAO_INFORMADO" xml:space="preserve">
    <value>O CPF do usuário (SOMENTE NÚMEROS) deve ser informado para cadastrar o empréstimo. </value>
  </data>
  <data name="USUARIO_PENDENCIAS" xml:space="preserve">
    <value>O usuário informado não pode realizar empréstimos até devolver o livro que pegou anteriormente.</value>
  </data>
  <data name="USUARIO_SEM_EMPRESTIMO" xml:space="preserve">
    <value>Usuário não tem empréstimo ativo.</value>
  </data>
  <data name="USUARIO_SEM_PERMISSAO" xml:space="preserve">
    <value>Usuário não tem permissão para acessar esse recurso.</value>
  </data>
</root>